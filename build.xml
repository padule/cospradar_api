<?xml version="1.0" encoding="UTF-8"?>

<project name="CakePHP application" default="build">

	<!-- Propaties -->
	<property file="build.properties" />

	<!-- Build -->
	<target name="build"
		depends="prepare,lint,phploc,jsloc,phpmd-ci,phpcs-ci,phpcpd,migrations-lex,phpunit-ci,phpcb" />

	<target name="build-windows"
		depends="prepare,lint,phploc-win,migrations-lex-win,phpunit-ci-win" />

	<target name="build-parallel"
		depends="prepare,lint,tools-parallel,migrations-lex,phpunit-ci,phpcb" />

	<target name="tools-parallel" description="Run tools in parallel">
		<parallel threadCount="2">
			<sequential>
				<antcall target="phpmd-ci" />
			</sequential>
			<antcall target="phpcpd" />
			<antcall target="phpcs-ci" />
			<antcall target="phploc" />
		</parallel>
	</target>

	<!-- Delete Dir -->
	<target name="clean" description="Cleanup build artifacts">
		<delete dir="${basedir}/build/api" />
		<delete dir="${basedir}/build/code-browser" />
		<delete dir="${basedir}/build/coverage" />
		<delete dir="${basedir}/build/logs" />
		<delete dir="${basedir}/build/pdepend" />
		<delete dir="${basedir}/build/phpdoc" />
	</target>

	<!-- Create Dir -->
	<target name="prepare" depends="clean" description="Prepare for build">
		<mkdir dir="${basedir}/build/api" />
		<mkdir dir="${basedir}/build/code-browser" />
		<mkdir dir="${basedir}/build/coverage" />
		<mkdir dir="${basedir}/build/logs" />
		<mkdir dir="${basedir}/build/pdepend" />
		<mkdir dir="${basedir}/build/phpdoc" />
		<exec executable="chmod" dir="${basedir}/cake/app/Console">
			<arg line="-R 0755 ." />
		</exec>
		<exec executable="chmod" dir="${basedir}/cake/app/tmp">
			<arg line="-R 0777 ." />
		</exec>
	</target>

	<!-- LINT -->
	<target name="lint" description="Perform syntax check of sourcecode files">
		<apply executable="php" failonerror="true">
			<arg value="-l" />
			<fileset dir="${basedir}/cake/app">
				<include name="**/*.php" />
				<exclude name="**/Lib/Log/**/*.php" />
				<exclude name="**/Plugin/**/*.php" />
				<exclude name="**/Vendor/**/*.php" />
			</fileset>
		</apply>
	</target>

	<!-- PHPLOC -->
	<target name="phploc" description="Measure project size using PHPLOC">
		<exec executable="phploc">
			<arg line="--names=*.php,*.ctp --log-csv ${basedir}/build/logs/phploc.csv ${basedir}/cake/app/Console/Command ${basedir}/cake/app/Controller ${basedir}/cake/app/Model ${basedir}/cake/app/Test ${basedir}/cake/app/View " />
		</exec>
	</target>

	<!-- PHPLOC-win -->
	<target name="phploc-win" description="Measure project size using PHPLOC">
		<exec executable="cmd">
			<arg line="/c phploc --names=*.php,*.ctp --log-csv ${basedir}/build/logs/phploc.csv ${basedir}/cake/app/Console/Command ${basedir}/cake/app/Controller ${basedir}/cake/app/Model ${basedir}/cake/app/Test ${basedir}/cake/app/View " />
		</exec>
	</target>

	<!-- PDEPEND -->
	<target name="pdepend" description="Calculate software metrics using PHP_Depend">
		<exec executable="pdepend">
			<arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
			<arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
			<arg
				value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
			<arg value="--ignore=${basedir}/cake/app/Plugin,${basedir}/cake/app/Vendor" />
			<arg path="${basedir}/cake/app" />
		</exec>
	</target>

	<!-- PHPMD -->
	<target name="phpmd"
		description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
		<exec executable="phpmd">
			<arg path="${basedir}/cake/app" />
			<arg value="text" />
			<arg value="codesize,design,unusedcode" />
			<arg value="--exclude" />
			<arg value="Config,Lib,Locale,Plugin,Test,Vendor" />
		</exec>
	</target>

	<!-- PHPMD-CI -->
	<target name="phpmd-ci"
		description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
		<exec executable="phpmd">
			<arg path="${basedir}/cake/app/Console/Command,${basedir}/cake/app/Controller,${basedir}/cake/app/Model" />
			<arg value="xml" />
			<arg value="codesize,design,unusedcode" />
			<arg value="--exclude" />
			<arg value="${basedir}/cake/app/Model/Behavior" />
			<arg value="--reportfile" />
			<arg value="${basedir}/build/logs/pmd.xml" />
		</exec>
	</target>

	<!-- PHP code_sniffer -->
	<target name="phpcs"
		description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
		<exec executable="phpcs">
			<arg value="--standard=Tyrell" />
			<arg value="--extensions=php" />
			<arg
				value="--ignore=${basedir}/cake/app/Config,${basedir}/cake/app/Plugin,${basedir}/cake/app/Test,${basedir}/cake/app/Vendor" />
			<arg path="${basedir}/cake/app" />
		</exec>
	</target>

	<!-- PHP code_sniffer CI -->
	<target name="phpcs-ci"
		description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
		<exec executable="phpcs" output="/dev/null">
			<arg value="--report=checkstyle" />
			<arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
			<arg value="--standard=PEAR" />
			<arg value="--extensions=php" />
			<arg
				value="--ignore=${basedir}/cake/app/Config,${basedir}/cake/app/Plugin,${basedir}/cake/app/Test,${basedir}/cake/app/Vendor,${basedir}/cake/app/webroot/js," />
			<arg path="${basedir}/cake/app" />
		</exec>
	</target>

	<!-- PHPCPD -->
	<target name="phpcpd" description="Find duplicate code using PHPCPD">
		<exec executable="phpcpd">
			<arg
				line="--log-pmd ${basedir}/build/logs/pmd-cpd.xml
					--exclude Config
					--exclude Lib
					--exclude Locale
					--exclude Plugin
					--exclude Test
					--exclude Vendor
					${basedir}/cake/app
			" />
		</exec>
	</target>

	<!-- MIGRATIONS-lex -->
	<target name="migrations-lex" description="Run all migrations by CakePHP Migrations Plugin">
		<exec executable="${basedir}/cake/app/Console/cake">
			<arg value="Migrations.migration" />
			<arg value="run" />
			<arg value="all" />
			<arg line="-c default_lex" />
		</exec>
	</target>

	<!-- MIGRATIONS-lex-win -->
	<target name="migrations-lex-win" description="Run all migrations by CakePHP Migrations Plugin">
		<exec executable="cmd" dir="${basedir}/cake/app">
			<arg line="/c ${basedir}/cake/app/Console/cake" />
			<arg value="Migrations.migration" />
			<arg value="run" />
			<arg value="all" />
			<arg line="-c default_lex" />
		</exec>
	</target>

	<!-- PHPUnit -->
	<target name="phpunit"
		description="Run unit tests with PHPUnit. Intended for usage on the command line before committing.">
		<exec executable="${basedir}/cake/app/Console/cake">
			<arg value="test" />
			<arg value="app" />
			<arg value="AllTests" />
			<arg value="--configuration=${basedir}/build/phpunit.xml" />
			<arg value="--strict" />
			<arg value="--stderr" />
		</exec>
	</target>

	<!-- PHPUnit-CI -->
	<target name="phpunit-ci"
		description="Run unit tests with PHPUnit for the continuous integration server">
		<exec executable="${basedir}/cake/app/Console/cake">
			<arg value="test" />
			<arg value="app" />
			<arg value="AllTests" />
			<arg value="--no-colors" />
			<arg value="--configuration=${basedir}/build/phpunit.xml" />
			<arg value="--coverage-clover=${basedir}/build/logs/clover.xml" />
			<arg value="--coverage-html=${basedir}/build/coverage" />
			<arg value="--log-junit=${basedir}/build/logs/junit.xml" />
			<arg value="--strict" />
			<arg value="--stderr" />
		</exec>
	</target>

	<!-- PHPUnit-CI-win -->
	<target name="phpunit-ci-win"
		description="Run unit tests with PHPUnit for the continuous integration server">
		<exec executable="cmd" dir="${basedir}/cake">
			<arg line="/c ${basedir}/cake/app/Console/cake" />
			<arg value="test" />
			<arg value="app" />
			<arg value="AllTests" />
			<arg value="--no-colors" />
			<arg value="--configuration=${basedir}/build/phpunit.xml" />
			<arg value="--coverage-clover=${basedir}/build/logs/clover.xml" />
			<arg value="--coverage-html=${basedir}/build/coverage" />
			<arg value="--log-junit=${basedir}/build/logs/junit.xml" />
			<arg value="--strict" />
			<arg value="--stderr" />
		</exec>
	</target>

	<!-- PHP_CodeBrowser -->
	<target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
		<exec executable="phpcb">
			<arg value="--log" />
			<arg path="${basedir}/build/logs" />
			<arg value="--source" />
			<arg path="${basedir}/cake/app" />
			<arg value="--output" />
			<arg path="${basedir}/build/code-browser" />
		</exec>
	</target>

	<!-- PHPDocumentor -->
	<target name="phpdoc"
		description="Generate Application Documentation using PHPDocumentor2">
		<exec executable="phpdoc">
			<arg line="run -d app/ -t build/phpdoc/ -p" />
		</exec>
	</target>

	<!-- JavaScript loc -->
	<target name="jsloc" description="Measure JavaScript size using wc">
		<exec executable="/bin/bash" output="${basedir}/build/logs/jsloc.csv">
			<arg line="-- ${basedir}/build/jsloc.sh $(find ${basedir}/cake/app/webroot/js -type f -name 'jquery.*.js' -prune -o -type d -name 'ajaxzip2' -prune -o -type f -name 'dropzone.js' -prune -o -type f -name '*.js' -print)" />
		</exec>
	</target>
</project>
